{"version":3,"file":"static/js/441.3c31f412.chunk.js","mappings":"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","sources":["components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","Pages/Movies/Movies.jsx","api/api.jsx","components/ErrorMessage/ErrorMessage.jsx","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  padding: 20px;\n  display: flex;\n  gap: 20px;\n`;\n\nexport const Btn = styled.button`\n  width: 10%;\n  font-size: 18px;\n  border-radius: 5px;\n  border: solid;\n  border-color: #947150;\n  &:hover,\n  &:focus {\n    background-color: #e4cab3;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 30%;\n  padding: 10px;\n  font-size: 18px;\n  border-radius: 5px;\n  border: solid;\n  border-color: #947150;\n`;\n","import { Form, Btn, Input } from './Searchbar.styled';\n\nexport const Searchbar = ({ onSubmitSearchBar, value }) => (\n  <div>\n    <Form onSubmit={onSubmitSearchBar}>\n      <Btn>\n        <span>Search</span>\n      </Btn>\n\n      <Input\n        type=\"text\"\n        name=\"search\"\n        autoComplete=\"off\"\n        autoFocus\n        defaultValue={value}\n        placeholder=\"Search movies\"\n      />\n    </Form>\n  </div>\n);\n","import { Loader } from '../../components/Loader/Loader';\nimport ErrorMessage from 'components/ErrorMessage/ErrorMessage';\n\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchWord } from 'api/api';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { Searchbar } from '../../components/Searchbar/Searchbar';\n\nexport default function Movies() {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [list, setList] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchQuery = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (searchQuery === '') {\n      return;\n    }\n    if (list.length > 0) {\n      return;\n    }\n\n    setLoading(true);\n    setError(false);\n\n    fetchWord(searchQuery)\n      .then(data => {\n        setList(data.results);\n      })\n      .catch(() => {\n        setError(true);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [list, searchQuery]);\n\n  const onSubmitSearchBar = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const searchValue = form.search.value;\n\n    if (searchValue === '') {\n      setSearchParams({});\n      setList([]);\n      return;\n    }\n\n    setSearchParams({ query: searchValue });\n    setList([]);\n  };\n\n  return (\n    <div>\n      <Searchbar onSubmitSearchBar={onSubmitSearchBar} value={searchQuery} />\n      <section>\n        {loading && <Loader />}\n        {error && (\n          <ErrorMessage title=\"Whoops! Error! Please reload this page!\" />\n        )}\n        <MoviesList list={list} />\n      </section>\n    </div>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst key = '024cc5f09908565df80effcaf2ef8e5e';\n\nexport const fetchAll = async () => {\n  const response = await axios.get(\n    `trending/all/day?language=en-US&api_key=${key}`\n  );\n  return response.data;\n};\n\nexport const fetchWord = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${key}&query=${query}`\n  );\n  return response.data;\n};\n\nexport const fetchId = async id => {\n  const response = await axios.get(`movie/${id}?api_key=${key}`);\n  return response.data;\n};\n\nexport const fetchCredits = async id => {\n  const response = await axios.get(`movie/${id}/credits?api_key=${key}`);\n  return response.data;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews?api_key=${key}`);\n  return response.data;\n};\n","export default function ErrorMessage({ title }) {\n  return <p>{title}</p>;\n}\n","import { Radio } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Radio\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"radio-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"radio-wrapper\"\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 20px;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 15px;\n`;\n\nexport const Wrap = styled.div`\n  width: 200px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const FilmName = styled.h3`\n  text-align: center;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { List, Wrap, FilmName } from './MoviesList.styled';\n\nexport default function MoviesList({ list }) {\n  const location = useLocation();\n\n  return (\n    <List>\n      {list.map(({ id, title, name, poster_path }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <Wrap>\n              <img\n                src={\n                  poster_path\n                    ? `http://image.tmdb.org/t/p/w154${poster_path}`\n                    : 'http://placehold.it/154x231&text=no_image'\n                }\n                alt={title || name}\n                width=\"154\"\n                height=\"231\"\n              />\n\n              <FilmName>{title || name}</FilmName>\n            </Wrap>\n          </Link>\n        </li>\n      ))}\n    </List>\n  );\n}\n"],"names":["Form","styled","Btn","Input","Searchbar","onSubmitSearchBar","value","onSubmit","type","name","autoComplete","autoFocus","defaultValue","placeholder","Movies","useState","loading","setLoading","error","setError","list","setList","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","length","fetchWord","then","data","results","catch","finally","evt","preventDefault","searchValue","currentTarget","search","query","Loader","ErrorMessage","title","MoviesList","axios","key","fetchAll","response","fetchId","id","fetchCredits","fetchReviews","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","List","Wrap","FilmName","location","useLocation","map","poster_path","to","state","from","src","alt"],"sourceRoot":""}