{"version":3,"file":"static/js/275.3fd4b373.chunk.js","mappings":"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","sources":["Pages/MovieDetaills/MovieDetaills.jsx","api/api.jsx","components/ErrorMessage/ErrorMessage.jsx","components/Loader/Loader.jsx"],"sourcesContent":["import { Loader } from '../../components/Loader/Loader';\nimport ErrorMessage from 'components/ErrorMessage/ErrorMessage';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchId } from 'api/api';\n// import {\n//   SectionMain,\n//   GoBackLink,\n//   Wrapper,\n//   Card,\n//   AddList,\n// } from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [details, setDetails] = useState(null);\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/movies');\n\n  const params = useParams();\n\n  useEffect(() => {\n    setError(false);\n    setLoading(true);\n    if (!params.movieId) {\n      return;\n    }\n\n    fetchId(params.movieId)\n      .then(data => {\n        setDetails(data);\n      })\n      .catch(() => {\n        setError(true);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [params.movieId]);\n\n  if (!details) {\n    return;\n  }\n  const {\n    poster_path,\n    title,\n    original_title,\n    release_date,\n    genres,\n    vote_average,\n    overview,\n  } = details;\n\n  return (\n    <section>\n      <Link to={backLinkRef.current}>{'<- GO BACK'}</Link>\n      <h2>Movie Details:</h2>\n      {loading && <Loader />}\n      {error && (\n        <ErrorMessage title=\"Whoops! Error! Please reload this page!\" />\n      )}\n      {details && (\n        <>\n          <div>\n            <img\n              src={\n                poster_path\n                  ? `http://image.tmdb.org/t/p/w342${poster_path}`\n                  : 'http://placehold.it/200x300&text=no_image'\n              }\n              alt={title}\n              width=\"200\"\n            />\n            <div>\n              <h3>{original_title}</h3>\n              <p>\n                <b>Release date:</b> {release_date}\n              </p>\n              <p>\n                <b>Genres:</b>{' '}\n                {genres.map(({ name }) => `${name.toLowerCase()} | `)}\n              </p>\n              <p>\n                <b>Ranking:</b> {vote_average}\n              </p>\n              <p>\n                <b>Overview:</b> {overview}\n              </p>\n            </div>\n          </div>\n          <h3>Additional information:</h3>\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </section>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst key = '024cc5f09908565df80effcaf2ef8e5e';\n\nexport const fetchAll = async () => {\n  const response = await axios.get(\n    `trending/all/day?language=en-US&api_key=${key}`\n  );\n  return response.data;\n};\n\nexport const fetchWord = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${key}&query=${query}`\n  );\n  return response.data;\n};\n\nexport const fetchId = async id => {\n  const response = await axios.get(`movie/${id}?api_key=${key}`);\n  return response.data;\n};\n\nexport const fetchCredits = async id => {\n  const response = await axios.get(`movie/${id}/credits?api_key=${key}`);\n  return response.data;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews?api_key=${key}`);\n  return response.data;\n};\n","export default function ErrorMessage({ title }) {\n  return <p>{title}</p>;\n}\n","import { Radio } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Radio\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"radio-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"radio-wrapper\"\n    />\n  );\n};\n"],"names":["MovieDetails","useState","loading","setLoading","error","setError","details","setDetails","location","useLocation","backLinkRef","useRef","state","from","params","useParams","useEffect","movieId","fetchId","then","data","catch","finally","poster_path","title","original_title","release_date","genres","vote_average","overview","to","current","src","alt","width","map","name","toLowerCase","Suspense","fallback","axios","key","fetchAll","response","fetchWord","query","id","fetchCredits","fetchReviews","ErrorMessage","Loader","visible","height","ariaLabel","wrapperStyle","wrapperClass"],"sourceRoot":""}