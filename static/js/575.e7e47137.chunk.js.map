{"version":3,"file":"static/js/575.e7e47137.chunk.js","mappings":"mQAEaA,EAAcC,EAAAA,GAAAA,QAAH,0CAIXC,EAAWD,EAAAA,GAAAA,GAAH,sB,SCCN,SAASE,IACtB,OAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACRD,GAAS,IAETE,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJN,EAAQM,EAAKC,QACd,IACAC,OAAM,WACLN,GAAS,EACV,IAEAO,SAAQ,WACPX,GAAW,EACZ,GACJ,GAAE,KAGD,UAACN,EAAD,YACE,SAACE,EAAD,UAAU,oBACTG,IAAW,SAACa,EAAA,EAAD,IACXT,IACC,SAACU,EAAA,EAAD,CAAcC,MAAM,6CAEtB,SAACC,EAAA,EAAD,CAAYd,KAAMA,MAGvB,C,+LCpCDe,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAECX,EAAQ,mCAAG,oGACCU,EAAAA,EAAAA,IAAA,kDACsBC,IAFvB,cAChBC,EADgB,yBAIfA,EAASV,MAJM,2CAAH,qDAORW,EAAS,mCAAG,WAAMC,GAAN,uFACAJ,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACgBG,IAFhB,cACjBF,EADiB,yBAIhBA,EAASV,MAJO,2CAAH,sDAOTa,EAAO,mCAAG,WAAMC,GAAN,uFACEN,EAAAA,EAAAA,IAAA,gBAAmBM,EAAnB,oBAAiCL,IADnC,cACfC,EADe,yBAEdA,EAASV,MAFK,2CAAH,sDAKPe,EAAY,mCAAG,WAAMD,GAAN,uFACHN,EAAAA,EAAAA,IAAA,gBAAmBM,EAAnB,4BAAyCL,IADtC,cACpBC,EADoB,yBAEnBA,EAASV,MAFU,2CAAH,sDAKZgB,EAAY,mCAAG,WAAMF,GAAN,uFACHN,EAAAA,EAAAA,IAAA,gBAAmBM,EAAnB,4BAAyCL,IADtC,cACpBC,EADoB,yBAEnBA,EAASV,MAFU,2CAAH,qD,mEC7BV,SAASK,EAAT,GAAkC,IAAVC,EAAS,EAATA,MACrC,OAAO,uBAAIA,GACZ,C,4ECAYF,EAAS,WACpB,OACE,SAAC,KAAD,CACEa,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,gBACVC,aAAc,CAAC,EACfC,aAAa,iBAGlB,C,mGCXYC,EAAOpC,EAAAA,GAAAA,GAAH,kJASJqC,EAAOrC,EAAAA,GAAAA,IAAH,8GAOJsC,EAAWtC,EAAAA,GAAAA,GAAH,+C,SCfN,SAASoB,EAAT,GAA+B,IAATd,EAAQ,EAARA,KAC7BiC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACJ,EAAD,UACG9B,EAAKmC,KAAI,gBAAGd,EAAH,EAAGA,GAAIR,EAAP,EAAOA,MAAOuB,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,YAApB,OACR,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAajB,GAAMkB,MAAO,CAAEC,KAAMP,GAA1C,UACE,UAACF,EAAD,YACE,gBACEU,IACEJ,EAAW,yCAC2BA,GAClC,6CAENK,IAAK7B,GAASuB,EACdV,MAAM,MACND,OAAO,SAGT,SAACO,EAAD,UAAWnB,GAASuB,UAdjBf,EADD,KAsBf,C","sources":["Pages/Home/Home.styled.js","Pages/Home/Home.jsx","api/api.jsx","components/ErrorMessage/ErrorMessage.jsx","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SectionHome = styled.section`\n  padding: 20px;\n`;\n\nexport const PageName = styled.h2``;\n","import { Loader } from '../../components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { fetchAll } from 'api/api';\nimport ErrorMessage from 'components/ErrorMessage/ErrorMessage';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { PageName, SectionHome } from './Home.styled';\n\nexport default function Home() {\n  const [loading, setLoading] = useState(true);\n  const [list, setList] = useState([]);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    setError(false);\n\n    fetchAll()\n      .then(data => {\n        setList(data.results);\n      })\n      .catch(() => {\n        setError(true);\n      })\n\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <SectionHome>\n      <PageName>Trending today:</PageName>\n      {loading && <Loader />}\n      {error && (\n        <ErrorMessage title=\"Whoops! Error! Please reload this page!\" />\n      )}\n      <MoviesList list={list} />\n    </SectionHome>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst key = '024cc5f09908565df80effcaf2ef8e5e';\n\nexport const fetchAll = async () => {\n  const response = await axios.get(\n    `trending/all/day?language=en-US&api_key=${key}`\n  );\n  return response.data;\n};\n\nexport const fetchWord = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${key}&query=${query}`\n  );\n  return response.data;\n};\n\nexport const fetchId = async id => {\n  const response = await axios.get(`movie/${id}?api_key=${key}`);\n  return response.data;\n};\n\nexport const fetchCredits = async id => {\n  const response = await axios.get(`movie/${id}/credits?api_key=${key}`);\n  return response.data;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews?api_key=${key}`);\n  return response.data;\n};\n","export default function ErrorMessage({ title }) {\n  return <p>{title}</p>;\n}\n","import { Radio } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Radio\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"radio-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"radio-wrapper\"\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 20px;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 15px;\n`;\n\nexport const Wrap = styled.div`\n  width: 200px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const FilmName = styled.h3`\n  text-align: center;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { List, Wrap, FilmName } from './MoviesList.styled';\n\nexport default function MoviesList({ list }) {\n  const location = useLocation();\n\n  return (\n    <List>\n      {list.map(({ id, title, name, poster_path }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <Wrap>\n              <img\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w154${poster_path}`\n                    : 'https://placehold.it/154x231&text=no_image'\n                }\n                alt={title || name}\n                width=\"154\"\n                height=\"231\"\n              />\n\n              <FilmName>{title || name}</FilmName>\n            </Wrap>\n          </Link>\n        </li>\n      ))}\n    </List>\n  );\n}\n"],"names":["SectionHome","styled","PageName","Home","useState","loading","setLoading","list","setList","error","setError","useEffect","fetchAll","then","data","results","catch","finally","Loader","ErrorMessage","title","MoviesList","axios","key","response","fetchWord","query","fetchId","id","fetchCredits","fetchReviews","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","List","Wrap","FilmName","location","useLocation","map","name","poster_path","to","state","from","src","alt"],"sourceRoot":""}