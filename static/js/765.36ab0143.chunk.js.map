{"version":3,"file":"static/js/765.36ab0143.chunk.js","mappings":"sPAMe,SAASA,IACtB,OAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACRD,GAAS,GAELH,EAAKK,OAAS,IAGlBC,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJP,EAAQO,EAAKC,QACd,IACAC,OAAM,WACLP,GAAS,EACV,IAEAQ,SAAQ,WACPZ,GAAW,EACZ,GACJ,GAAE,CAACC,KAGF,gCACE,wBAAI,mBACHF,IAAW,SAAC,IAAD,IACXI,IACC,SAAC,IAAD,CAAcU,MAAM,6CAEtB,SAAC,IAAD,CAAYZ,KAAMA,MAGvB,C,+LCtCDa,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAECR,EAAQ,mCAAG,oGACCO,EAAAA,EAAAA,IAAA,kDACsBC,IAFvB,cAChBC,EADgB,yBAIfA,EAASP,MAJM,2CAAH,qDAORQ,EAAS,mCAAG,WAAMC,GAAN,uFACAJ,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACgBG,IAFhB,cACjBF,EADiB,yBAIhBA,EAASP,MAJO,2CAAH,sDAOTU,EAAO,mCAAG,WAAMC,GAAN,uFACEN,EAAAA,EAAAA,IAAA,gBAAmBM,EAAnB,oBAAiCL,IADnC,cACfC,EADe,yBAEdA,EAASP,MAFK,2CAAH,sDAKPY,EAAY,mCAAG,WAAMD,GAAN,uFACHN,EAAAA,EAAAA,IAAA,gBAAmBM,EAAnB,4BAAyCL,IADtC,cACpBC,EADoB,yBAEnBA,EAASP,MAFU,2CAAH,sDAKZa,EAAY,mCAAG,WAAMF,GAAN,uFACHN,EAAAA,EAAAA,IAAA,gBAAmBM,EAAnB,4BAAyCL,IADtC,cACpBC,EADoB,yBAEnBA,EAASP,MAFU,2CAAH,qD,mEC7BV,SAASc,EAAT,GAAkC,IAAVV,EAAS,EAATA,MACrC,OAAO,uBAAIA,GACZ,C,4ECAYW,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,gBACVC,aAAc,CAAC,EACfC,aAAa,iBAGlB,C,oFCVc,SAASC,EAAT,GAA+B,IAAT9B,EAAQ,EAARA,KAC7B+B,GAAWC,EAAAA,EAAAA,MAGjB,OAFAC,QAAQC,IAAIlC,IAGV,wBACGA,EAAKmC,KAAI,gBAAGhB,EAAH,EAAGA,GAAIP,EAAP,EAAOA,MAAOwB,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,YAApB,OACR,SAAC,KAAD,CAAeC,GAAE,kBAAanB,GAAMoB,MAAO,CAAEC,KAAMT,GAAnD,UACE,2BACE,gBACEU,IACEJ,EAAW,wCAC0BA,GACjC,4CAENK,IAAK9B,GAASwB,EACdV,MAAM,MACND,OAAO,SAET,0BACE,wBAAKb,GAASwB,QAZTjB,IADAA,EADH,KAqBf,C","sources":["Pages/Home/Home.jsx","api/api.jsx","components/ErrorMessage/ErrorMessage.jsx","components/Loader/Loader.jsx","components/MoviesList/MoviesList.jsx"],"sourcesContent":["import { Loader } from '../../components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { fetchAll } from 'api/api';\nimport ErrorMessage from 'components/ErrorMessage/ErrorMessage';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nexport default function Home() {\n  const [loading, setLoading] = useState(true);\n  const [list, setList] = useState([]);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    setError(false);\n\n    if (list.length > 0) {\n      return;\n    }\n    fetchAll()\n      .then(data => {\n        setList(data.results);\n      })\n      .catch(() => {\n        setError(true);\n      })\n\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [list]);\n\n  return (\n    <section>\n      <h2>Trending today</h2>\n      {loading && <Loader />}\n      {error && (\n        <ErrorMessage title=\"Whoops! Error! Please reload this page!\" />\n      )}\n      <MoviesList list={list} />\n    </section>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst key = '024cc5f09908565df80effcaf2ef8e5e';\n\nexport const fetchAll = async () => {\n  const response = await axios.get(\n    `trending/all/day?language=en-US&api_key=${key}`\n  );\n  return response.data;\n};\n\nexport const fetchWord = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${key}&query=${query}`\n  );\n  return response.data;\n};\n\nexport const fetchId = async id => {\n  const response = await axios.get(`movie/${id}?api_key=${key}`);\n  return response.data;\n};\n\nexport const fetchCredits = async id => {\n  const response = await axios.get(`movie/${id}/credits?api_key=${key}`);\n  return response.data;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews?api_key=${key}`);\n  return response.data;\n};\n","export default function ErrorMessage({ title }) {\n  return <p>{title}</p>;\n}\n","import { Radio } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Radio\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"radio-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"radio-wrapper\"\n    />\n  );\n};\n","import { Link, useLocation } from 'react-router-dom';\n// import { List, Item, WrapperCard } from './MoviesList.styled';\n\nexport default function MoviesList({ list }) {\n  const location = useLocation();\n  console.log(list);\n\n  return (\n    <ul>\n      {list.map(({ id, title, name, poster_path }) => (\n        <Link key={id} to={`/movies/${id}`} state={{ from: location }}>\n          <li key={id}>\n            <img\n              src={\n                poster_path\n                  ? `http://image.tmdb.org/t/p/w154${poster_path}`\n                  : 'http://placehold.it/154x231&text=no_image'\n              }\n              alt={title || name}\n              width=\"154\"\n              height=\"231\"\n            />\n            <div>\n              <h3>{title || name}</h3>\n            </div>\n          </li>\n        </Link>\n      ))}\n    </ul>\n  );\n}\n"],"names":["Home","useState","loading","setLoading","list","setList","error","setError","useEffect","length","fetchAll","then","data","results","catch","finally","title","axios","key","response","fetchWord","query","fetchId","id","fetchCredits","fetchReviews","ErrorMessage","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","MoviesList","location","useLocation","console","log","map","name","poster_path","to","state","from","src","alt"],"sourceRoot":""}