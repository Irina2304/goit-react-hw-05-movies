{"version":3,"file":"static/js/186.d0eb20a0.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAECC,EAAQ,mCAAG,oGACCF,EAAAA,EAAAA,IAAA,kDACsBC,IAFvB,cAChBE,EADgB,yBAIfA,EAASC,MAJM,2CAAH,qDAORC,EAAS,mCAAG,WAAMC,GAAN,uFACAN,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACgBK,IAFhB,cACjBH,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,sDAOTG,EAAO,mCAAG,WAAMC,GAAN,uFACER,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAiCP,IADnC,cACfE,EADe,yBAEdA,EAASC,MAFK,2CAAH,sDAKPK,EAAY,mCAAG,WAAMD,GAAN,uFACHR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAAyCP,IADtC,cACpBE,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZM,EAAY,mCAAG,WAAMF,GAAN,uFACHR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAAyCP,IADtC,cACpBE,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,qD,mEC7BV,SAASO,EAAT,GAAkC,IAAVC,EAAS,EAATA,MACrC,OAAO,uBAAIA,GACZ,C,4ECAYC,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,gBACVC,aAAc,CAAC,EACfC,aAAa,iBAGlB,C,sICPc,SAASC,IACtB,OAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,UAAS,IAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAEMC,GAASC,EAAAA,EAAAA,MAmBf,OAjBAC,EAAAA,EAAAA,YAAU,WACHF,EAAOG,UAIZrB,EAAAA,EAAAA,IAAakB,EAAOG,SACjBC,MAAK,SAAA5B,GACJuB,EAAWvB,EAAK6B,QACjB,IACAC,OAAM,WACLT,GAAS,EACV,IACAU,SAAQ,WACPZ,GAAW,EACZ,GACJ,GAAE,CAACK,EAAOG,WAGT,iCACE,wBAAI,aACHT,IAAW,SAAC,IAAD,IACXE,IACC,SAAC,IAAD,CAAcZ,MAAM,4CAEF,IAAnBc,EAAQU,QACP,wBACGV,EAAQW,KAAI,gBAAG7B,EAAH,EAAGA,GAAI8B,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,0BACE,uBAAG,YAAW,IAAED,MAElB,uBAAIC,MAJG/B,EADE,OAUf,uBAAG,sDAIV,C","sources":["api/api.jsx","components/ErrorMessage/ErrorMessage.jsx","components/Loader/Loader.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst key = '024cc5f09908565df80effcaf2ef8e5e';\n\nexport const fetchAll = async () => {\n  const response = await axios.get(\n    `trending/all/day?language=en-US&api_key=${key}`\n  );\n  return response.data;\n};\n\nexport const fetchWord = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${key}&query=${query}`\n  );\n  return response.data;\n};\n\nexport const fetchId = async id => {\n  const response = await axios.get(`movie/${id}?api_key=${key}`);\n  return response.data;\n};\n\nexport const fetchCredits = async id => {\n  const response = await axios.get(`movie/${id}/credits?api_key=${key}`);\n  return response.data;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews?api_key=${key}`);\n  return response.data;\n};\n","export default function ErrorMessage({ title }) {\n  return <p>{title}</p>;\n}\n","import { Radio } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Radio\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"radio-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"radio-wrapper\"\n    />\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'api/api';\nimport { Loader } from '../Loader/Loader';\nimport ErrorMessage from 'components/ErrorMessage/ErrorMessage';\n\nexport default function Reviews() {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [reviews, setReviews] = useState([]);\n\n  const params = useParams();\n\n  useEffect(() => {\n    if (!params.movieId) {\n      return;\n    }\n\n    fetchReviews(params.movieId)\n      .then(data => {\n        setReviews(data.results);\n      })\n      .catch(() => {\n        setError(true);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [params.movieId]);\n\n  return (\n    <>\n      <h3>Reviews:</h3>\n      {loading && <Loader />}\n      {error && (\n        <ErrorMessage title=\"Whoops! Error! Please reload this page!\" />\n      )}\n      {reviews.length !== 0 ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <p>\n                <b>Author:</b> {author}\n              </p>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>Sorry! We don't have any reviews for this movie</p>\n      )}\n    </>\n  );\n}\n"],"names":["axios","key","fetchAll","response","data","fetchWord","query","fetchId","id","fetchCredits","fetchReviews","ErrorMessage","title","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","Reviews","useState","loading","setLoading","error","setError","reviews","setReviews","params","useParams","useEffect","movieId","then","results","catch","finally","length","map","author","content"],"sourceRoot":""}